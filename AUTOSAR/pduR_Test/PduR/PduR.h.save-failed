/**
*	header file for PduR definitions
*/


#ifndef PDUR_H_
#define PDUR_H_

/* -------------------------------------------------------------------------- */
/*                              File include                                  */
/* -------------------------------------------------------------------------- */
#include "Std_Types.h"
#include "PduR_Cfg.h"
#include "PduR_Types.h"
#include "PduR_If.h"

#include <stdio.h>
/**
* If you do not wanna use any module ,
*	you can turn it off from PduR_Cfg.h file .
*/
#if PDUR_COM_SUPPORT == STD_ON
//#include "PduR_Com.h"
#endif
#if PDUR_CANIF_SUPPORT == STD_ON
#include "PduR_CanIf.h"
#endif
#if PDUR_CANTP_SUPPORT == STD_ON
//#include "PduR_CanTp.h"
#endif
#if PDUR_DCM_SUPPORT == STD_ON
//#include "PduR_Dcm.h"
#endif

/* -------------------------------------------------------------------------- */
/*                         Variables declarations                             */
/* -------------------------------------------------------------------------- */
/*
* configuration of PduR , const val .
* we need it to identify which configuration already used .
*/
extern const PduR_PBConfigType* PduRConfig;
//State of PduR do we use pduR initialization or not .
extern PduR_StateType PduRState;

/* -------------------------------------------------------------------------- */
/*                           In-line functions                                */
/* -------------------------------------------------------------------------- */
#define PduR_IsUpModule(_mod) ((_mod > PDUR_UP_MODULES) && (_mod < PDUR_LOIF_MODULES))
#define PduR_IsIfModule(_mod) ((_mod > PDUR_LOIF_MODULES) && (_mod < PDUR_LOTP_MODULES))
#define PduR_IsTpModule(_mod) ((_mod > PDUR_LOTP_MODULES) && (_mod < PDUR_END_OF_MODULES))
#define PduR_IsLoModule(_mod) ((_mod > PDUR_LOIF_MODULES) && (_mod < PDUR_END_OF_MODULES))

/* -------------------------------------------------------------------------- */
/*                         Functions declarations                             */
/* -------------------------------------------------------------------------- */
/*
* Zero cost operation .
* if you need #defines to replace function names
* instead of using new functions to replacement .
*/
#if ZERO_COST_OPERATION == STD_ON
#define PduR_Init(...)
#define PduR_GetConfigurationId(...) 0

#else

void PduR_Init(const PduR_PBConfigType* ConfigPtr);
uint16_t PduR_GetConfigurationId (void);

#endif

#endif	//PDUR_H_

